const { init, load, on, setDataPath, setAudioPath, audioAssets, initPointer, getPointer, Sprite, GameLoop, Quadtree, randInt, Button, track, untrack, Pool, initKeys } = kontra;

const { canvas, context } = init();

setDataPath(path);
setAudioPath(path);
initPointer();
initKeys();

const screenWidth = document.documentElement.clientWidth;
const screenHeight = document.documentElement.clientHeight;

const _kw = Math.min(Math.floor(screenWidth / 375), Math.floor(screenHeight / 667));
const kw = _kw < 1 ? 1 : _kw;

canvas.width = screenWidth;
canvas.height = screenHeight;

const LEFT = 1;
const RIGHT = 2;
const BACK_LEFT = 3;
const BACK_RIGHT = 4;

const CARD_TYPE_MAGIC = 1;
const CARD_TYPE_WEAPON = 2;
const CARD_TYPE_EQUIPMENT = 3;
const CARD_TYPE_ITEM = 4;
const CARD_TYPE_SUPER_WEAPON = 5;

let paused = true;
let intervalId = null;

const bitmapWidth = 16;
const bitmapHeight = 16;
const pixelSize = 2 * kw;
const speedFactor = pixelSize / 50;
const minDistance = 40 * kw;
const approachDistance = 100 * kw;
const objSize = bitmapWidth * pixelSize;
const enemyAttackRangeTiles = 1;
const cardLimit = 9;

const worldLimit = 5000 * kw;
const enemyCount = 16;

const backgroundArr = [];
const skillArr = [];
const cardArr = [];
const dialogArr = [];

const enemyPool = Pool({
    maxSize: 50,
    create: Sprite
});

const itemPool = Pool({
    maxSize: 100,
    create: Sprite
});

const msgPool = Pool({
    maxSize: 50,
    create: Sprite
});

const quadtree = Quadtree();
quadtree.maxObjects = 8;
quadtree.maxDepth = 5;
quadtree.bounds = {
    x: 0,
    y: 0,
    width: worldLimit,
    height: worldLimit
};

const viewport = {
    x: 0,
    y: 0,
    width: canvas.width,
    height: canvas.height
};

const scoreboard = {
    kill: 0,
    break: 0,
    damage: 0,
    receivedDamage: 0,
    init() {
        this.kill = 0;
        this.break = 0;
        this.damage = 0;
        this.receivedDamage = 0;
    }
};

const wizard = [
    // left
    0x0000, 0x79f8, 0x4be0, 0x5bf8,
    0x23f8, 0x37f8, 0x363c, 0x31cc,
    0x35d4, 0x2220, 0x33e8, 0x2fec,
    0x1ddc, 0x1bfc, 0x03ec, 0x07f0,
    // right
    0x0000, 0x1f9e, 0x07d2, 0x1fda,
    0x1fc4, 0x1fec, 0x3c6c, 0x338c,
    0x2bac, 0x0444, 0x17cc, 0x37f4,
    0x3bb8, 0x3fd8, 0x37c0, 0x0fe0,
    // back left
    0x0000, 0x79f8, 0x4be0, 0x5bf0,
    0x23f0, 0x37f8, 0x37f8, 0x37fc,
    0x3610, 0x23e0, 0x33e8, 0x2ffc,
    0x1ddc, 0x1bfc, 0x03ec, 0x07f0,
    // back right
    0x0000, 0x1f9e, 0x07d2, 0x0fda,
    0x0fc4, 0x1fec, 0x1fec, 0x3fec,
    0x086c, 0x07c4, 0x17cc, 0x3ff4,
    0x3bb8, 0x3fd8, 0x37c0, 0x0fe0,
];

const background = [
    // torch 1
    0x0400, 0x0120, 0x0280, 0x0240,
    0x0420, 0x0410, 0x0890, 0x0990,
    0x07e0, 0x07e0, 0x03c0, 0x03c0,
    0x0180, 0x0180, 0x0180, 0x0180,
    // torch 2
    0x0020, 0x0480, 0x0140, 0x0240,
    0x0420, 0x0820, 0x0910, 0x0990,
    0x07e0, 0x07e0, 0x03c0, 0x03c0,
    0x0180, 0x0180, 0x0180, 0x0180,
    // stone 1
    0x0000, 0x0000, 0x07c0, 0x0fe0,
    0x0de0, 0x0be0, 0x0bf0, 0x07d8,
    0x3bbc, 0x7dbe, 0x7dfe, 0x5ebe,
    0xbf3e, 0xbfbe, 0xafb8, 0x2e00,
    // stone 2
    0x0000, 0x0000, 0x0000, 0x0000,
    0x03c0, 0x07a0, 0x0fd0, 0x1fc8,
    0x1fc8, 0x1f80, 0x0f1c, 0x703e,
    0xf87f, 0xfc7d, 0xf47d, 0x7038,
    // tree 1
    0x0080, 0x0080, 0x0180, 0x018e,
    0x03f8, 0x73e0, 0x1f80, 0x0f80,
    0x0380, 0x0380, 0x0380, 0x0380,
    0x01c0, 0x01c0, 0x03e0, 0x01c0,
    // tree 2
    0x0100, 0x0300, 0x0380, 0xc380,
    0x3381, 0x0fc6, 0x07f8, 0x03e0,
    0x03c0, 0x0380, 0x0380, 0x0380,
    0x0180, 0x0180, 0x03c0, 0x0180,
];

const menu_book = [
    0x3ff8, 0x4008, 0x6004, 0x5ffe,
    0x5002, 0x57fa, 0x57fa, 0x5002,
    0x57fa, 0x5002, 0x57fa, 0x5002,
    0x57fa, 0x5002, 0x3002, 0x1ffe,
];

const skill_book = [
    0x3ff8, 0x4008, 0x6004, 0x5ffe,
    0x5002, 0x50c2, 0x50c2, 0x53f2,
    0x53f2, 0x50c2, 0x50c2, 0x50c2,
    0x50c2, 0x5002, 0x3002, 0x1ffe,
];

const chest = [
    0x0000, 0x0000, 0x0000, 0x0000,
    0x37f4, 0x4bfa, 0x85fd, 0xfdfd,
    0x0000, 0x84f9, 0x8421, 0x8401,
    0xf7ff, 0x0000, 0x0000, 0x0000,
];

const heart = [
    0x0000, 0x0000, 0x1c38, 0x2244,
    0x4182, 0x4002, 0x4002, 0x4002,
    0x2004, 0x1008, 0x0810, 0x0420,
    0x0240, 0x0180, 0x0000, 0x0000,
];

const exp_ball = [
    0x0000, 0x0000, 0x0000, 0x0000,
    0x0000, 0x0180, 0x0240, 0x04a0,
    0x0420, 0x0240, 0x0180, 0x0000,
    0x0000, 0x0000, 0x0000, 0x0000,
];

const btn_close = [
    0xc003, 0xe007, 0x700e, 0x381c,
    0x1c38, 0x0e70, 0x07e0, 0x03c0,
    0x03c0, 0x07e0, 0x0e70, 0x1c38,
    0x381c, 0x700e, 0xe007, 0xc003,
];

const boom = [
    // 1
    0x0000, 0x0000, 0x0000, 0x0400,
    0x0000, 0x0018, 0x003c, 0x003c,
    0x0018, 0x0000, 0x0000, 0x0000,
    0x1000, 0x0000, 0x0000, 0x0000,
    // 2
    0x0000, 0x0c00, 0x1e00, 0x1e00,
    0x0c18, 0x003c, 0x007e, 0x007e,
    0x003c, 0x0018, 0x0000, 0x1800,
    0x3c00, 0x3c00, 0x1800, 0x0000,
    // 3
    0x0c00, 0x1e00, 0x3f00, 0x3f00,
    0x1e3c, 0x0c7e, 0x407e, 0x007e,
    0x007e, 0x003c, 0x1800, 0x3c00,
    0x7e00, 0x7e00, 0x3c10, 0x1800,
    // 4
    0x1e00, 0x3f00, 0x3f00, 0x3f18,
    0x3f3c, 0x1e76, 0x40fb, 0xe0ff,
    0x407e, 0x103c, 0x3c18, 0x7e00,
    0x7a00, 0x7e10, 0x7e38, 0x3c10,
];

const slime = {
    hp: 50,
    atk: 15,
    def: 2,
    exp: 150,
    audioPath: '/audio/attack_slime',
    mat: [
        // left
        0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x03c0, 0x0c30,
        0x1008, 0x1248, 0x2664, 0x2664,
        0x4002, 0x4002, 0x300c, 0x0ff0,
        // right
        0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x03c0, 0x0c30,
        0x1008, 0x1248, 0x2664, 0x2664,
        0x4002, 0x4002, 0x300c, 0x0ff0,
        // back left
        0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x03c0, 0x0c30,
        0x1008, 0x1048, 0x2004, 0x2024,
        0x4022, 0x4002, 0x300c, 0x0ff0,
        // back right
        0x0000, 0x0000, 0x0000, 0x0000,
        0x0000, 0x0000, 0x03c0, 0x0c30,
        0x1008, 0x1208, 0x2004, 0x2404,
        0x4402, 0x4002, 0x300c, 0x0ff0,
    ]
};

const skeleton = {
    hp: 80,
    atk: 20,
    def: 2,
    exp: 180,
    audioPath: '/audio/attack_sword',
    mat: [
        // left
        0x0000, 0x3000, 0x33e0, 0x37f0,
        0x36b0, 0x3490, 0x3490, 0x37f0,
        0x328f, 0x37db, 0x7c91, 0x3fdb,
        0x35db, 0x02ae, 0x03e4, 0x0360,
        // right
        0x0000, 0x000c, 0x07cc, 0x0fec,
        0x0d6c, 0x092c, 0x092c, 0x0fec,
        0xf14c, 0xdbec, 0x893e, 0xdbfc,
        0xdbac, 0x7540, 0x27c0, 0x06c0,
        // back left
        0x0000, 0x3000, 0x33e0, 0x37f0,
        0x37f0, 0x37f0, 0x37f0, 0x37f0,
        0x32af, 0x37e1, 0x7c9d, 0x3ffd,
        0x35c1, 0x02aa, 0x03e4, 0x0360,
        // back right
        0x0000, 0x000c, 0x07cc, 0x0fec,
        0x0fec, 0x0fec, 0x0fec, 0x0fec,
        0xf54c, 0x87ec, 0xb93e, 0xbffc,
        0x83ac, 0x5540, 0x27c0, 0x06c0,
    ]
};

const boss_skeleton = {
    hp: 4000,
    atk: 50,
    def: 5,
    exp: 7000,
    speed: 2,
    isBoss: true,
    size: pixelSize * 2,
    audioPath: '/audio/attack_sword',
    mat: [
        // left
        0x2000, 0x67c0, 0x6fe0, 0x6fe0,
        0x63a0, 0x6930, 0x6ef0, 0x65a0,
        0x6000, 0x7bd8, 0x2104, 0x02cc,
        0x0004, 0x03c0, 0x0420, 0x0810,
        // right
        0x0004, 0x03e6, 0x07f6, 0x07f6,
        0x05c6, 0x0c96, 0x0f76, 0x05a6,
        0x0006, 0x1bde, 0x2084, 0x3340,
        0x2000, 0x03c0, 0x0420, 0x0810,
        // back left
        0x2000, 0x67c0, 0x6fe0, 0x6fe0,
        0x6fe0, 0x6ff0, 0x6e70, 0x6420,
        0x6180, 0x7bd8, 0x2104, 0x02cc,
        0x0004, 0x03c0, 0x0420, 0x0810,
        // back right
        0x0004, 0x03e6, 0x07f6, 0x07f6,
        0x07f6, 0x0ff6, 0x0e76, 0x0426,
        0x0186, 0x1bde, 0x2084, 0x3340,
        0x2000, 0x03c0, 0x0420, 0x0810,
    ]
}

const spider = {
    hp: 180,
    atk: 30,
    def: 5,
    exp: 900,
    audioPath: '/audio/attack_spider',
    mat: [
        // left
        0x0000, 0x0000, 0x0000, 0x300c,
        0x4bd2, 0x07e0, 0x3ffc, 0x47e2,
        0x1db8, 0x27e4, 0x4a52, 0x1008,
        0x1008, 0x0000, 0x0000, 0x0000,
        // right
        0x0000, 0x0000, 0x0000, 0x300c,
        0x4bd2, 0x07e0, 0x3ffc, 0x47e2,
        0x1db8, 0x27e4, 0x4a52, 0x1008,
        0x1008, 0x0000, 0x0000, 0x0000,
        // left
        0x0000, 0x0000, 0x0000, 0x1008,
        0x1008, 0x4a52, 0x27e4, 0x1db8,
        0x47e2, 0x3ffc, 0x07e0, 0x4bd2,
        0x300c, 0x0000, 0x0000, 0x0000,
        // right
        0x0000, 0x0000, 0x0000, 0x1008,
        0x1008, 0x4a52, 0x27e4, 0x1db8,
        0x47e2, 0x3ffc, 0x07e0, 0x4bd2,
        0x300c, 0x0000, 0x0000, 0x0000,
    ]
};

const snake = {
    hp: 200,
    atk: 35,
    def: 5,
    exp: 1000,
    audioPath: '/audio/attack_bite',
    mat: [
        // left
        0x0000, 0x0f80, 0x1bc0, 0x0fe0,
        0x03e0, 0x00f0, 0x0078, 0x0078,
        0x0038, 0x0ff0, 0x3ff0, 0x7f8e,
        0x707f, 0x7ffb, 0x3ffb, 0x1fc6,
        // right
        0x0000, 0x01f0, 0x03d8, 0x07f0,
        0x07c0, 0x0f00, 0x1e00, 0x1e00,
        0x1c00, 0x0ff0, 0x0ffc, 0x71fe,
        0xfe0e, 0xdffe, 0xdffc, 0x63f8,
        // left
        0x0000, 0x0f80, 0x1bc0, 0x0fe0,
        0x03e0, 0x00f0, 0x0078, 0x0078,
        0x0038, 0x0ff0, 0x3ff0, 0x7f8e,
        0x707f, 0x7ffb, 0x3ffb, 0x1fc6,
        // right
        0x0000, 0x01f0, 0x03d8, 0x07f0,
        0x07c0, 0x0f00, 0x1e00, 0x1e00,
        0x1c00, 0x0ff0, 0x0ffc, 0x71fe,
        0xfe0e, 0xdffe, 0xdffc, 0x63f8,
    ]
};

const boss_crab = {
    hp: 10000,
    atk: 70,
    def: 15,
    exp: 50000,
    speed: 2,
    isBoss: true,
    size: pixelSize * 2,
    audioPath: '/audio/attack_bite',
    mat: [
        // left
        0x9009, 0x9009, 0x8811, 0x77ee,
        0x0ff0, 0x1ff8, 0x3ffc, 0xfbdf,
        0x9db9, 0x87e1, 0x8241, 0xe007,
        0xc003, 0xc003, 0xe007, 0x700e,
        // right
        0x9009, 0x9009, 0x8811, 0x77ee,
        0x0ff0, 0x1ff8, 0x3ffc, 0xfbdf,
        0x9db9, 0x87e1, 0x8241, 0xe007,
        0xc003, 0xc003, 0xe007, 0x700e,
        // back left
        0x700e, 0xe007, 0xc003, 0xc003,
        0xe667, 0x8241, 0x87e1, 0x9db9,
        0xfbdf, 0x3ffc, 0x1ff8, 0x0ff0,
        0x77ee, 0x8811, 0x9009, 0x9009,
        // back right
        0x700e, 0xe007, 0xc003, 0xc003,
        0xe667, 0x8241, 0x87e1, 0x9db9,
        0xfbdf, 0x3ffc, 0x1ff8, 0x0ff0,
        0x77ee, 0x8811, 0x9009, 0x9009,
    ]
};

const mummy = {
    hp: 300,
    atk: 40,
    def: 5,
    exp: 2600,
    audioPath: '/audio/attack_blunt',
    mat: [
        // left
        0x0000, 0x07e0, 0x0ff0, 0x0ff0,
        0x0df0, 0x0db0, 0x07e0, 0x0ff0,
        0x1428, 0x37ec, 0x37ec, 0x3e7c,
        0x17e8, 0x2364, 0x1368, 0x2744,
        // right
        0x0000, 0x07e0, 0x0ff0, 0x0ff0,
        0x0fb0, 0x0db0, 0x07e0, 0x0ff0,
        0x1428, 0x37ec, 0x37ec, 0x3e7c,
        0x17e8, 0x26c4, 0x16c8, 0x22e4,
        // back left
        0x0000, 0x07e0, 0x0ff0, 0x0ff0,
        0x0ff0, 0x0ff0, 0x07e0, 0x0ff0,
        0x1468, 0x37ec, 0x376c, 0x3fbc,
        0x17e8, 0x2364, 0x1368, 0x2744,
        // back right
        0x0000, 0x07e0, 0x0ff0, 0x0ff0,
        0x0ff0, 0x0ff0, 0x07e0, 0x0ff0,
        0x1628, 0x37ec, 0x36ec, 0x3dfc,
        0x17e8, 0x26c4, 0x16c8, 0x22e4,
    ]
};

const orc = {
    hp: 300,
    atk: 45,
    def: 8,
    exp: 3000,
    audioPath: '/audio/attack_blunt',
    mat: [
        // left
        0x0000, 0x0aa0, 0x0fe7, 0x0922,
        0x0fe7, 0x0822, 0x0fe7, 0x71f2,
        0x6dfa, 0x45fe, 0x6dee, 0x6de6,
        0x7de2, 0x3a62, 0x1662, 0x0660,
        // right
        0x0000, 0x0550, 0xe7f0, 0x4490,
        0xe7f0, 0x4410, 0xe7f0, 0x4f8e,
        0x5fb6, 0x7fa2, 0x77b6, 0x67b6,
        0x47be, 0x465c, 0x4668, 0x0660,
        // back left
        0x0000, 0x0aa0, 0x0fe7, 0x0fe2,
        0x0fe7, 0x0fe2, 0x0fe7, 0x7ff2,
        0x47fa, 0x5ffe, 0x5fee, 0x47e6,
        0x47e2, 0x2e62, 0x1662, 0x0660,
        // back right
        0x0000, 0x0550, 0xe7f0, 0x47f0,
        0xe7f0, 0x47f0, 0xe7f0, 0x4ffe,
        0x5fe2, 0x7ffa, 0x77fa, 0x67e2,
        0x47e2, 0x4674, 0x4668, 0x0660,
    ]
};

const boss_tauren = {
    hp: 20000,
    atk: 90,
    def: 18,
    exp: 150000,
    speed: 2,
    isBoss: true,
    size: pixelSize * 2,
    audioPath: '/audio/attack_big_sword',
    mat: [
        // left
        0x0080, 0x0300, 0x0400, 0x0f10,
        0x0ee0, 0x1a00, 0x3cc3, 0x7027,
        0x000e, 0x101c, 0x1038, 0x1170,
        0x3de8, 0x7ec8, 0x706c, 0xc01e,
        // right
        0x0100, 0x00c0, 0x0020, 0x08f0,
        0x0770, 0x0058, 0xc33c, 0xe40e,
        0x7000, 0x3808, 0x1c08, 0x0e88,
        0x17bc, 0x137e, 0x360e, 0x7803,
        // back left
        0x0080, 0x0300, 0x0400, 0x0f10,
        0x0ee0, 0x1a00, 0x3cc3, 0x7027,
        0x000e, 0x101c, 0x1038, 0x1170,
        0x3de8, 0x7ec8, 0x706c, 0xc01e,
        // back right
        0x0100, 0x00c0, 0x0020, 0x08f0,
        0x0770, 0x0058, 0xc33c, 0xe40e,
        0x7000, 0x3808, 0x1c08, 0x0e88,
        0x17bc, 0x137e, 0x360e, 0x7803,
    ]
};

const fox = {
    hp: 320,
    atk: 50,
    def: 10,
    exp: 5200,
    audioPath: '/audio/attack_scythe',
    mat: [
        // left
        0x1800, 0x3000, 0x6208, 0x6318,
        0x63f8, 0x6248, 0x63f8, 0x61f0,
        0x30e0, 0x191c, 0x0bfa, 0x0dfa,
        0x09f8, 0x0890, 0x0890, 0x0998,
        // right
        0x0018, 0x000c, 0x1046, 0x18c6,
        0x1fc6, 0x1246, 0x1fc6, 0x0f86,
        0x070c, 0x3898, 0x5fd0, 0x5fb0,
        0x1f90, 0x0910, 0x0910, 0x1990,
        // back left
        0x1800, 0x3000, 0x6208, 0x6318,
        0x63f8, 0x6248, 0x63f8, 0x61f0,
        0x30e0, 0x191c, 0x0bfa, 0x0dfa,
        0x09f8, 0x0890, 0x0890, 0x0998,
        // back right
        0x0018, 0x000c, 0x1046, 0x18c6,
        0x1fc6, 0x1246, 0x1fc6, 0x0f86,
        0x070c, 0x3898, 0x5fd0, 0x5fb0,
        0x1f90, 0x0910, 0x0910, 0x1990,
    ]
};

const devil = {
    hp: 350,
    atk: 55,
    def: 12,
    exp: 5500,
    audioPath: '/audio/attack_fork',
    mat: [
        // left
        0xa000, 0xa808, 0xedd8, 0x4be8,
        0x47f0, 0x45d0, 0x4490, 0x57f4,
        0x5bec, 0x7226, 0xfffe, 0xf7f7,
        0x4ff9, 0x7bef, 0x63e3, 0x4361,
        // right
        0x0005, 0x1015, 0x1bb7, 0x17d2,
        0x0fe2, 0x0ba2, 0x0922, 0x2fea,
        0x37da, 0x644e, 0x7fff, 0xefef,
        0x9ff2, 0xf7de, 0xc7c6, 0x86c2,
        // back left
        0xa000, 0xa808, 0xedd8, 0x4be8,
        0x47f0, 0x47f0, 0x47f0, 0x57f4,
        0x5ffc, 0x7ebe, 0xfdde, 0xf3e7,
        0x7fff, 0x7bef, 0x63e3, 0x4361,
        // back right
        0x0005, 0x1015, 0x1bb7, 0x17d2,
        0x0fe2, 0x0fe2, 0x0fe2, 0x2fea,
        0x3ffa, 0x7d7e, 0x7bbf, 0xe7cf,
        0xfffe, 0xf7de, 0xc7c6, 0x86c2,
    ]
};

const reaper = {
    hp: 400,
    atk: 60,
    def: 12,
    exp: 8500,
    audioPath: '/audio/attack_scythe',
    mat: [
        // left
        0x0000, 0x00fe, 0x39f8, 0x7bfc,
        0xcbae, 0x8b26, 0x0b27, 0x0bff,
        0x0a53, 0x0904, 0x09ac, 0x0ffe,
        0x0bff, 0x0b77, 0x0afb, 0x09fd,
        // right
        0x0000, 0x7f00, 0x1f9c, 0x3fde,
        0x75d3, 0x64d1, 0xe4d0, 0xffd0,
        0xca50, 0x2090, 0x3590, 0x7ff0,
        0xffd0, 0xeed0, 0xdf50, 0xbf90,
        // back left
        0x0000, 0x00fe, 0x39f8, 0x7bfc,
        0xcbfe, 0x8bfe, 0x0bff, 0x0bff,
        0x0b07, 0x09fc, 0x09fc, 0x0ffe,
        0x0bff, 0x0b77, 0x0afb, 0x09fd,
        // back right
        0x0000, 0x7f00, 0x1f9c, 0x3fde,
        0x7fd3, 0x7fd1, 0xffd0, 0xffd0,
        0xe0d0, 0x3f90, 0x3f90, 0x7ff0,
        0xffd0, 0xeed0, 0xdf50, 0xbf90,
    ]
};

const maxExp = [
    200,
    800,
    1800,
    3200,
    5000,
    7200,
    9800,
    12800,
    16200,
    20000,
    30250,
    36000,
    42250,
    49000,
    56250,
    64000,
    72250,
    81000,
    90250,
    100000,
    132300,
    145200,
    158700,
    172800,
    187500,
    202800,
    218700,
    235200,
    252300,
    270000,
    336350,
    358400,
    381150,
    404600,
    428750,
    453600,
    479150,
    505400,
    532350,
    560000,
    672400,
    705600,
    739600,
    774400,
    810000,
    846400,
    883600,
    921600,
    960400,
    1000000,
];

const playerData = {
    x: Math.round((worldLimit - objSize) / 2),
    y: Math.round((worldLimit - objSize) / 2),
    maxHp: 100,
    atk: 60,
    def: 10,
    crit: 10,
    maxExp: maxExp[0],
    lv: 1,
    exp: 0
};